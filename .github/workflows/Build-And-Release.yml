name: Build and Release Python

on:
  workflow_dispatch:
  create:
    branches:
      - "release/V*"

jobs:
  BuildAndRelease:
    if: startsWith(github.ref_name, 'V')
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest fastapi uvicorn python-jose passlib httpx bcrypt python-dotenv requests ollama python-multipart uuid

      - name: Fetch All Tags
        run: git fetch --prune --unshallow --tags || true

      - name: Collect Commit Messages
        id: GetCommits
        run: |
          $latestTag = git describe --tags --abbrev=0 2>$null
          if (!$latestTag) {
            Write-Output "No tags found. Using initial commit."
            $commits = git log --oneline
          } else {
            $commits = git log "$latestTag..HEAD" --oneline
          }

          if ($commits) {
            Add-Content -Path $env:GITHUB_ENV -Value "commit_messages<<EOF"
            Add-Content -Path $env:GITHUB_ENV -Value "$commits"
            Add-Content -Path $env:GITHUB_ENV -Value "EOF"
          } else {
            Add-Content -Path $env:GITHUB_ENV -Value "commit_messages=No new commits since last release."
          }

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.Token }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            This release contains the latest Python source code.

            Commits included in this release:
            ${{ env.commit_messages }}
          replacesArtifacts: true